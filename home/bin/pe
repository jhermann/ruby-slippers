#! /bin/bash
#
# "gedit" wrapper
#

outer_python=$(command which python)

fail() { # fail with error message on stderr and exit code 1
    echo >&2 "ERROR:" "$@"
    exit 1
}
py_file() {
    file="$($outer_python -c "import $1; print $1.__file__")"
    file="${file/.pyc/.py}"
    file="${file/.pyo/.py}"
}

# Clean environment for built-in interpreter
deactivate 2>/dev/null || :
export PYTHONPATH=

# Put system binaries upfront
export PATH=/usr/bin:$PATH
test $# -gt 0 || case $(lsb_release -cs) in
    trusty)
        gedit >>/tmp/gedit-$USER.log 2>&1 &
        disown
        exit 0
        ;;
    precise | lucid | *)
        gedit --background
        exit 0
        ;;
esac

# Look out for grep results (containing a ':') and load file at the matching line
args=()
files=()
for arg in "$@"; do
    case "$arg" in
        -*)
            # copy over any option
            args+=("$arg")
            ;;
        ^*)
            # Magic open (auto-detect and lookup filename)
            file=''
            if test -f setup.py; then
                py_file "${arg#?}"
            fi
            test -n "$file" || fail "Cannot locate anything for '${arg#?}'!"
            files+=("$file")
            ;;
        py^*)
            # Open Python module
            py_file "${arg#py?}"
            test -n "$file" || fail "Cannot locate python module '${arg#py?}'!"
            files+=("$file")
            ;;
        ?*~*)
            # open file at first regex match (file~pattern)
            match=$(grep -nim1 -E -e "${arg#*~}" "${arg%%~*}")
            test -n "$match" && files+=("${arg%%~*}:${match%%:*}") || files+=("${arg%%~*}")
            ;;
        *)
            # some file or directory
            if test -d "$arg"; then
                IFS=$'\n'
                files+=( $(findall "$arg" -type f | sort | head -n 25) )
                unset IFS
            else
                files+=("$arg")
            fi
            ;;
    esac
done

# Open files
for filename in "${files[@]}"; do
    line=""
    test "${filename%%:*}" = "$filename" || line=+$(cut -f2 -d: <<<"$filename")
    filename="${filename%%:*}"
    if [[ "$filename" == [ab]/* ]]; then
        # treat "git diff" pasted filenames special
        test -d "${filename:0:1}" || filename="${filename:2}"
    fi

    case $(lsb_release -cs) in
        trusty | vivid)
            gedit "${args[@]}" "$filename" $line >>/tmp/gedit-$USER.log 2>&1 &
            disown
            ;;
        precise | lucid | *)
            gedit --background "${args[@]}" "$filename" $line
            ;;
    esac
done

# Bring window to front
if which wmctrl >/dev/null; then
    test "$(dirname $filename)" != '.' || filename="$(pwd)/$filename"
    title_re="^[^ ]+ +[^ ]+ +[^ ]+ +$(basename $filename).*/$(basename $(dirname $filename)). - gedit\$"
    for i in seq 10; do
        wid=$(wmctrl -l | egrep "$title_re" | tail -n1 | cut -f1 -d' ')
        test -n "$wid" && wmctrl -i -a "$wid" && break || sleep .1
    done
fi
