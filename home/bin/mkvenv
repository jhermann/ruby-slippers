#! /bin/bash
#
# Make a Python virtualenv with a know version of "virtualenv", so
# we don't have to worry about unsupported options, and age-old versions
#
# If the first argument is an executable, use that as the Python interpreter.
#
set -e
#set -x
venv=1.9.1
venvdir="$HOME/.pyvenv"
virtualenv="$venvdir/.virtualenv"

# Download virtualenv tool if missing
if test ! -f "$venvdir/.complete"; then
    mkdir -p "$virtualenv"
    rm -rf "$virtualenv"
    if test ! -f "$venvdir/.virtualenv-$venv.tar.gz"; then
        echo "*** Downloading virtualenv-$venv.tar.gz"
        if pip install --log "$venvdir/.virtualenv.log" -d "$venvdir" virtualenv==$venv; then
            echo "*** Downloaded virtualenv-$venv.tar.gz using pip"
        else
            ( cd "$venvdir" && curl -sOkS https://pypi.python.org/packages/source/v/virtualenv/virtualenv-$venv.tar.gz )
        fi
        mv "$venvdir/virtualenv-$venv.tar.gz" "$venvdir/.virtualenv-$venv.tar.gz"
    fi
    ( cd "$venvdir" && tar xfz .virtualenv-$venv.tar.gz && mv virtualenv-$venv .virtualenv )
    touch "$venvdir/.complete"
fi

python=python
orig_python=$(cat $(dirname $(dirname $(which python)))/lib/python*/orig-prefix.txt 2>/dev/null || :)
test -z "$orig_python" || python="$orig_python/bin/python"
if test -f "$1" -a -x "$1"; then
    python="$1"
    shift
fi

echo "Using $python"
$python "$virtualenv/virtualenv.py" "$@"

venvdir="."
for arg in "$@"; do
    if test -d "$arg/bin" -a -r "$arg/bin/activate"; then
        venvdir=$(cd "$arg" && pwd)
        break
    fi
done

for deps in requirements.txt requires.txt *-requirements.txt requirements-*.txt; do
    test -r "$deps" && "$venvdir/bin/pip" install -r "$deps"
done

if test "$(which python 2>/dev/null)" != "$venvdir/bin/python" ; then
    echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
    echo "Please call the follwing command to activate this virtualenv..."
    echo "." $(cd "$arg/bin" && pwd)"/activate"
    echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
fi
